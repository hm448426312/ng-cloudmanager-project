import { OnInit, EventEmitter, ComponentFactoryResolver } from '@angular/core';
import { Router } from '@angular/router';
export declare class TreeComponent implements OnInit {
    private resolver;
    private router;
    clickEvent: EventEmitter<{}>;
    extendEvent: EventEmitter<{}>;
    options: any;
    _treeDatas: any;
    treeDatas: any;
    tempSearch: any[];
    selectedNode: any;
    keyId: any;
    keyName: any;
    keyChild: any;
    constructor(resolver: ComponentFactoryResolver, router: Router);
    ngOnInit(): void;
    clickNode(event: any): void;
    extendNode(event: any): void;
    private _findNodeById(id, source);
    private _findNodeByAllName(name, source);
    private _findNodeByName(name, source);
    private _findParentNodeById(id, source, parent?);
    private _findParentsNodeById(result, id, source);
    private _findChildrensNodeByNode(result, source);
    private _matchSearchNodesByKey(result, val, key, source);
    private _fuzzySearchNodesByKey(result, val, key, source);
    findNodeById(id: any): any;
    findNodeByName(name: any): any[];
    findNodeByAllName(name: any): any[];
    findParentNodeById(id: any): any;
    findParentsNodeById(id: any): any[];
    findChildrensNodeByNode(node: any): any[];
    insertNode(child: any, parent?: any): any;
    updateNodeData(data: any, keys: any): void;
    deleteNodeById(id: any): void;
    matchSearchNodesByKey(val: any, key: any): any[];
    fuzzySearchNodesByKey(val: any, key: any): any[];
    expandNode(node: any): void;
    expandNodes(nodes: any): void;
    lighthightNodes(nodes: any): void;
    removeLighthightNodes(nodes: any): void;
    selectTreeNode(node: any): void;
    deSelectTreeNode(node: any): void;
}
